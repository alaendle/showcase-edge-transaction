{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Source Remote Debug (C)",
      "type": "cppdbg",
      "request": "attach",
      "program": "./main",
      "processId": "${command:pickRemoteProcess}",
      "pipeTransport": {
        "pipeCwd": "${workspaceFolder}",
        "pipeProgram": "docker",
        "pipeArgs": [
          "exec",
          "-i",
          "Source",
          "sh",
          "-c"
        ],
        "debuggerPath": "/usr/bin/gdb"
      },
      "sourceFileMap": {
        "/app": "${workspaceFolder}/modules/Source"
      },
      "linux": {
        "MIMode": "gdb",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      },
      "osx": {
        "MIMode": "lldb"
      },
      "windows": {
        "MIMode": "gdb",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      }
    },
    {
      "name": "SharpSink Remote Debug (.NET Core)",
      "type": "coreclr",
      "request": "attach",
      "processId": "${command:pickRemoteProcess}",
      "pipeTransport": {
        "pipeProgram": "docker",
        "pipeArgs": [
          "exec",
          "-i",
          "SharpSink",
          "sh",
          "-c"
        ],
        "debuggerPath": "~/vsdbg/vsdbg",
        "pipeCwd": "${workspaceFolder}",
        "quoteArgs": true
      },
      "sourceFileMap": {
        "/app": "${workspaceFolder}/modules/SharpSink"
      },
      "justMyCode": true
    },
    {
      "name": "SharpSink Local Debug (.NET Core)",
      "type": "coreclr",
      "request": "launch",
      "program": "${workspaceRoot}/modules/SharpSink/bin/Debug/netcoreapp2.1/SharpSink.dll",
      "args": [],
      "cwd": "${workspaceRoot}/modules/SharpSink",
      "internalConsoleOptions": "openOnSessionStart",
      "stopAtEntry": false,
      "console": "internalConsole",
      "env": {
        "EdgeHubConnectionString": "${config:azure-iot-edge.EdgeHubConnectionString}",
        "EdgeModuleCACertificateFile": "${config:azure-iot-edge.EdgeModuleCACertificateFile}"
      }
    }
  ]
}